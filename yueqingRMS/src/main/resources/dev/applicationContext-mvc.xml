<?xml version="1.0" encoding="utf-8"?> 
<beans xmlns="http://www.springframework.org/schema/beans" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:tx="http://www.springframework.org/schema/tx" 
    xmlns:context="http://www.springframework.org/schema/context" 
    xmlns:p="http://www.springframework.org/schema/p" 
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:task="http://www.springframework.org/schema/task" 
    xsi:schemaLocation="  
	             http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd   
          	    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd    
         	     http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.1.xsd  
         	     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd    
         	     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd 
         	     http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd    
              	http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd"
             default-lazy-init="true" 
              > 
	
	<!--springmvc的注解驱动-->  
    <mvc:annotation-driven  />  
    
    <!--使用基于注解的自动装配-->  
    <context:annotation-config/> 
    
     <!-- 启动AOP支持 -->
    <!--proxy-target-class="true" 通知spring使用cglib而不是jdk的来生成代理方法 AOP可以拦截到Controller -->
    <aop:aspectj-autoproxy  proxy-target-class="true"/>
    <!-- 配置AOP -->  
	<!-- <aop:config >  
       <aop:pointcut expression ="execution(* com.baimi.routerweb.service..*.*(..))"  
             id= "pointcut" />  
       <aop:advisor advice-ref ="txAdvice" pointcut-ref="pointcut" />  
	</aop:config > -->  
	
    <!-- 开放静态常量 -->
	<mvc:resources mapping="/pages/**" location="/WEB-INF/pages/"/> 
	<mvc:resources mapping="/static/**" location="/WEB-INF/static/"/> 
	<mvc:resources mapping="/static/**" location="/static/"/>  
	
	<!-- 静态资源(js、image等)的访问 -->  
    <mvc:default-servlet-handler/> 
    
    <!-- springTask 定时任务配置 -->
    <context:component-scan base-package="com.yueqingRMS.platform.quartz" />
    <!-- pool-size="8" 最多给到10   其他地方用了2  这里先给8 -->
    <task:scheduler id="yrmsScheduler" pool-size="8"/> 
    <!--开启这个配置，spring才能识别@Scheduled注解   -->  
    <task:annotation-driven scheduler="yrmsScheduler" mode="proxy"/>  
    
     	
     	
	<!--选择扫描包 -->
	<!-- 自动扫描controller包下的所有类，使其认为spring mvc的控制器 -->
<!-- 	<context:component-scan base-package="com.**" /> -->
	<context:component-scan base-package="com" use-default-filters="false">
       <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
       <!-- 全局异常处理 -->
<!--        <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/> -->
    </context:component-scan>	

    <context:component-scan base-package="com" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Component" />
    </context:component-scan>	
    
    <context:component-scan base-package="com.**.Impl" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Service" />
    </context:component-scan>	
  
	
	
	<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" /><!-- json转换器 -->
			</list>
		</property>
	</bean>
	
	<!-- 拦截器定义 -->
	<mvc:interceptors>
		<mvc:interceptor>
        <mvc:mapping path="/**" />
<!--             <mvc:mapping path="/business/**" /> -->
            <bean id="loginInterceptor" class="com.yueqingRMS.platform.interceptor.LoginInterceptor" />
        </mvc:interceptor>
     </mvc:interceptors> 
	
	
	
    
	
    <!-- 视图解析器 --> 
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix">
			<value>/WEB-INF/pages/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>
	
	 
    <!-- 文件上传 -->

<!--     <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"> -->
<!-- 		<property name="defaultEncoding"> -->
<!-- 			<value>UTF-8</value> -->
<!-- 		</property> -->
<!-- 		<property name="maxUploadSize"> -->
<!-- 			<value>32505856</value>上传文件大小限制为31M，31*1024*1024 -->
<!-- 		</property> -->
<!-- 		<property name="maxInMemorySize"> -->
<!-- 			<value>4096</value> -->
<!-- 		</property> -->
<!-- 	</bean> -->
	
	
	<!-- 处理文件上传 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="gbk" /> <!-- 默认编码 (ISO-8859-1) -->
		<property name="maxInMemorySize" value="10240" /> <!-- 最大内存大小 (10240)-->
		<property name="uploadTempDir" value="/upload/" /> <!-- 上传后的目录名 (WebUtils#TEMP_DIR_CONTEXT_ATTRIBUTE) -->
		<property name="maxUploadSize" value="-1" /> <!-- 最大文件大小，-1为无限止(-1) -->
	</bean>
	
	
	<!--容器-->  
    <import resource="applicationContext.xml"/>
    <!--集成Mybatis-->  
    <import resource="applicationContext-mybatis.xml"/> 
    <!--集成邮件功能-->  
    <import resource="applicationContext-mail.xml"/>
  	<!-- 定时任务 -->
	<import resource="applicationContext-quartz.xml"/>
	
</beans>



